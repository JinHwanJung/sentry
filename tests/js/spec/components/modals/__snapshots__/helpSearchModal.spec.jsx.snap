// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Docs Search Modal can open help search modal and complete a search 1`] = `
<DropdownBox
  className="css-1nf7i25-dropdownStyle"
>
  <div
    className="css-idf3ke-DropdownBox-dropdownStyle e7hmgqw0"
  >
    <SearchResultWrapper
      highlighted={true}
      key="Doc result 1-0"
      onClick={[Function]}
    >
      <Component
        className="css-1a9oeco-SearchResultWrapper-SearchResultWrapper e2qmixw0"
        highlighted={true}
        onClick={[Function]}
      >
        <div
          className="css-1a9oeco-SearchResultWrapper-SearchResultWrapper e2qmixw0"
          onClick={[Function]}
        >
          <withRouter(SearchResult)
            highlighted={true}
            item={
              Object {
                "description": "Doc result 1 description",
                "resultIcon": <DocsBadge />,
                "resultType": "doc",
                "sourceType": "help",
                "title": "Doc result 1",
                "to": "https://docs.sentry.io/doc_result",
              }
            }
            matches={
              Array [
                Object {
                  "indices": Array [],
                  "key": "title",
                  "value": "Doc result 1",
                },
                Object {
                  "indices": Array [],
                  "key": "description",
                  "value": "Doc result 1 description",
                },
              ]
            }
          >
            <SearchResult
              highlighted={true}
              item={
                Object {
                  "description": "Doc result 1 description",
                  "resultIcon": <DocsBadge />,
                  "resultType": "doc",
                  "sourceType": "help",
                  "title": "Doc result 1",
                  "to": "https://docs.sentry.io/doc_result",
                }
              }
              location={
                Object {
                  "query": Object {},
                }
              }
              matches={
                Array [
                  Object {
                    "indices": Array [],
                    "key": "title",
                    "value": "Doc result 1",
                  },
                  Object {
                    "indices": Array [],
                    "key": "description",
                    "value": "Doc result 1 description",
                  },
                ]
              }
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
              router={
                Object {
                  "createHref": [MockFunction],
                  "go": [MockFunction],
                  "goBack": [MockFunction],
                  "goForward": [MockFunction],
                  "isActive": [MockFunction],
                  "listen": [MockFunction],
                  "location": Object {
                    "query": Object {},
                  },
                  "params": Object {
                    "orgId": "org-slug",
                  },
                  "push": [MockFunction],
                  "replace": [MockFunction],
                  "setRouteLeaveHook": [MockFunction],
                }
              }
            >
              <Flex
                align="center"
                justify="space-between"
              >
                <Base
                  align="center"
                  className="css-v7pzd9"
                  justify="space-between"
                >
                  <div
                    className="css-v7pzd9"
                    is={null}
                  >
                    <Content>
                      <Component
<<<<<<< HEAD
                        className="css-lo919j-Content e1deq8q73"
                      >
                        <Flex
                          className="css-lo919j-Content e1deq8q73"
                          direction="column"
                        >
                          <Base
                            className="e1deq8q73 css-12nl3av-Content"
                            direction="column"
                          >
                            <div
                              className="e1deq8q73 css-12nl3av-Content"
=======
                        className="css-17yjk7u-Content ew3izuv3"
                      >
                        <Flex
                          className="css-17yjk7u-Content ew3izuv3"
                          direction="column"
                        >
                          <Base
                            className="ew3izuv3 css-1j7ynie-Content"
                            direction="column"
                          >
                            <div
                              className="ew3izuv3 css-1j7ynie-Content"
>>>>>>> build(travis): yarn --pnp [WIP]
                              is={null}
                            >
                              <div>
                                <SearchTitle>
                                  <span
<<<<<<< HEAD
                                    className="css-jyrvax-SearchTitle e1deq8q70"
=======
                                    className="css-1iu9oyn-SearchTitle ew3izuv0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                  >
                                    <span
                                      key="0"
                                    >
                                      Doc result 1
                                    </span>
                                  </span>
                                </SearchTitle>
                              </div>
                              <SearchDetail>
                                <div
                                  className="css-17e2h30-SearchDetail ew3izuv1"
                                >
                                  <span
                                    key="0"
                                  >
                                    Doc result 1 description
                                  </span>
                                </div>
                              </SearchDetail>
                            </div>
                          </Base>
                        </Flex>
                      </Component>
                    </Content>
                    <DocsBadge>
                      <Component
                        className="css-ekzoaq-DocsBadge e1mm0aaq1"
                      >
                        <ResultIcon
                          className="css-ekzoaq-DocsBadge e1mm0aaq1"
                        >
                          <div
                            className="e1mm0aaq1 css-f5te32-ResultIcon-DocsBadge e1mm0aaq0"
                          >
                            docs
                          </div>
                        </ResultIcon>
                      </Component>
                    </DocsBadge>
                  </div>
                </Base>
              </Flex>
            </SearchResult>
          </withRouter(SearchResult)>
        </div>
      </Component>
    </SearchResultWrapper>
    <SearchResultWrapper
      highlighted={false}
      key="FAQ result 1-1"
      onClick={[Function]}
    >
      <Component
        className="css-hmbjwn-SearchResultWrapper e2qmixw0"
        highlighted={false}
        onClick={[Function]}
      >
        <div
          className="css-hmbjwn-SearchResultWrapper e2qmixw0"
          onClick={[Function]}
        >
          <withRouter(SearchResult)
            highlighted={false}
            item={
              Object {
                "description": "FAQ result 1 description",
                "resultIcon": <FaqsBadge />,
                "resultType": "faq",
                "sourceType": "help",
                "title": "FAQ result 1",
                "to": "https://help.sentry.io/hc/en-us/articles/undefined",
              }
            }
            matches={
              Array [
                Object {
                  "indices": Array [],
                  "key": "title",
                  "value": "FAQ result 1",
                },
                Object {
                  "indices": Array [],
                  "key": "description",
                  "value": "FAQ result 1 description",
                },
              ]
            }
          >
            <SearchResult
              highlighted={false}
              item={
                Object {
                  "description": "FAQ result 1 description",
                  "resultIcon": <FaqsBadge />,
                  "resultType": "faq",
                  "sourceType": "help",
                  "title": "FAQ result 1",
                  "to": "https://help.sentry.io/hc/en-us/articles/undefined",
                }
              }
              location={
                Object {
                  "query": Object {},
                }
              }
              matches={
                Array [
                  Object {
                    "indices": Array [],
                    "key": "title",
                    "value": "FAQ result 1",
                  },
                  Object {
                    "indices": Array [],
                    "key": "description",
                    "value": "FAQ result 1 description",
                  },
                ]
              }
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
              router={
                Object {
                  "createHref": [MockFunction],
                  "go": [MockFunction],
                  "goBack": [MockFunction],
                  "goForward": [MockFunction],
                  "isActive": [MockFunction],
                  "listen": [MockFunction],
                  "location": Object {
                    "query": Object {},
                  },
                  "params": Object {
                    "orgId": "org-slug",
                  },
                  "push": [MockFunction],
                  "replace": [MockFunction],
                  "setRouteLeaveHook": [MockFunction],
                }
              }
            >
              <Flex
                align="center"
                justify="space-between"
              >
                <Base
                  align="center"
                  className="css-v7pzd9"
                  justify="space-between"
                >
                  <div
                    className="css-v7pzd9"
                    is={null}
                  >
                    <Content>
                      <Component
<<<<<<< HEAD
                        className="css-lo919j-Content e1deq8q73"
                      >
                        <Flex
                          className="css-lo919j-Content e1deq8q73"
                          direction="column"
                        >
                          <Base
                            className="e1deq8q73 css-12nl3av-Content"
                            direction="column"
                          >
                            <div
                              className="e1deq8q73 css-12nl3av-Content"
=======
                        className="css-17yjk7u-Content ew3izuv3"
                      >
                        <Flex
                          className="css-17yjk7u-Content ew3izuv3"
                          direction="column"
                        >
                          <Base
                            className="ew3izuv3 css-1j7ynie-Content"
                            direction="column"
                          >
                            <div
                              className="ew3izuv3 css-1j7ynie-Content"
>>>>>>> build(travis): yarn --pnp [WIP]
                              is={null}
                            >
                              <div>
                                <SearchTitle>
                                  <span
<<<<<<< HEAD
                                    className="css-jyrvax-SearchTitle e1deq8q70"
=======
                                    className="css-1iu9oyn-SearchTitle ew3izuv0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                  >
                                    <span
                                      key="0"
                                    >
                                      FAQ result 1
                                    </span>
                                  </span>
                                </SearchTitle>
                              </div>
                              <SearchDetail>
                                <div
                                  className="css-17e2h30-SearchDetail ew3izuv1"
                                >
                                  <span
                                    key="0"
                                  >
                                    FAQ result 1 description
                                  </span>
                                </div>
                              </SearchDetail>
                            </div>
                          </Base>
                        </Flex>
                      </Component>
                    </Content>
                    <FaqsBadge>
                      <Component
                        className="css-1ghhjdv-FaqsBadge e1mm0aaq2"
                      >
                        <ResultIcon
                          className="css-1ghhjdv-FaqsBadge e1mm0aaq2"
                        >
                          <div
                            className="e1mm0aaq2 css-1p74sld-ResultIcon-FaqsBadge e1mm0aaq0"
                          >
                            faqs
                          </div>
                        </ResultIcon>
                      </Component>
                    </FaqsBadge>
                  </div>
                </Base>
              </Flex>
            </SearchResult>
          </withRouter(SearchResult)>
        </div>
      </Component>
    </SearchResultWrapper>
  </div>
</DropdownBox>
`;
