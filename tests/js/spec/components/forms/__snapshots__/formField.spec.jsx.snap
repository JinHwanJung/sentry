// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormField + model renders with Form 1`] = `
<Form
  allowUndo={false}
  cancelLabel="Cancel"
  className="form-stacked"
  model={
    FormModel {
      "api": Client {},
      "errors": Object {},
      "fieldDescriptor": Map {
        "fieldName" => Object {
          "children": [Function],
          "className": undefined,
          "field": [Function],
          "flexibleControlStateSize": false,
          "hideErrorMessage": false,
          "name": "fieldName",
          "type": "text",
        },
      },
      "fieldState": Object {},
      "fields": Object {},
      "formState": undefined,
      "initialData": Object {},
      "options": Object {
        "allowUndo": false,
        "apiEndpoint": undefined,
        "apiMethod": undefined,
        "onFieldChange": undefined,
        "onSubmitError": [Function],
        "onSubmitSuccess": [Function],
        "resetOnError": undefined,
        "saveOnBlur": false,
      },
      "snapshots": Array [
        Map {},
      ],
    }
  }
  onSubmitError={[Function]}
  onSubmitSuccess={[Function]}
  requireChanges={false}
  saveOnBlur={false}
  submitDisabled={false}
  submitLabel="Save Changes"
  submitPriority="primary"
>
  <form
    className="form-stacked"
    onSubmit={[Function]}
  >
    <div>
      <TextField
        name="fieldName"
      >
        <InputField
          field={[Function]}
          name="fieldName"
          type="text"
        >
          <FormField
            field={[Function]}
            flexibleControlStateSize={false}
            hideErrorMessage={false}
            name="fieldName"
            type="text"
          >
            <Field
              alignRight={false}
              disabled={false}
              field={[Function]}
              flexibleControlStateSize={false}
              id="fieldName"
              inline={true}
              name="fieldName"
              required={false}
              type="text"
              visible={true}
            >
              <FieldWrapper
                hasControlState={true}
                inline={true}
              >
                <Component
<<<<<<< HEAD
                  className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
                >
                  <Flex
                    className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
                  >
                    <Base
                      className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
                    >
                      <div
                        className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
=======
                  className="css-gf4a1r-FieldWrapper-getPadding-borderStyle-inlineStyle eor2x1f0"
                >
                  <Flex
                    className="css-gf4a1r-FieldWrapper-getPadding-borderStyle-inlineStyle eor2x1f0"
                  >
                    <Base
                      className="eor2x1f0 css-12j1xki-FieldWrapper-getPadding-borderStyle-inlineStyle"
                    >
                      <div
                        className="eor2x1f0 css-12j1xki-FieldWrapper-getPadding-borderStyle-inlineStyle"
>>>>>>> build(travis): yarn --pnp [WIP]
                        is={null}
                      >
                        <FieldControl
                          alignRight={false}
                          controlState={
                            <ControlState
                              model={
                                FormModel {
                                  "api": Client {},
                                  "errors": Object {},
                                  "fieldDescriptor": Map {
                                    "fieldName" => Object {
                                      "children": [Function],
                                      "className": undefined,
                                      "field": [Function],
                                      "flexibleControlStateSize": false,
                                      "hideErrorMessage": false,
                                      "name": "fieldName",
                                      "type": "text",
                                    },
                                  },
                                  "fieldState": Object {},
                                  "fields": Object {},
                                  "formState": undefined,
                                  "initialData": Object {},
                                  "options": Object {
                                    "allowUndo": false,
                                    "apiEndpoint": undefined,
                                    "apiMethod": undefined,
                                    "onFieldChange": undefined,
                                    "onSubmitError": [Function],
                                    "onSubmitSuccess": [Function],
                                    "resetOnError": undefined,
                                    "saveOnBlur": false,
                                  },
                                  "snapshots": Array [
                                    Map {},
                                  ],
                                }
                              }
                              name="fieldName"
                            />
                          }
                          disabled={false}
                          errorState={
                            <Observer>
                              [Function]
                            </Observer>
                          }
                          flexibleControlStateSize={false}
                          inline={true}
                        >
                          <FieldControlErrorWrapper
                            inline={true}
                          >
                            <Component
                              className="css-1xbxyck-FieldControlErrorWrapper e11oxwlm0"
                              inline={true}
                            >
                              <Box
                                className="css-1xbxyck-FieldControlErrorWrapper e11oxwlm0"
                              >
                                <Base
                                  className="e11oxwlm0 css-1kkovz0-FieldControlErrorWrapper"
                                >
                                  <div
                                    className="e11oxwlm0 css-1kkovz0-FieldControlErrorWrapper"
                                    is={null}
                                  >
                                    <FieldControlWrapper>
                                      <Component
                                        className="css-1ke1xob-FieldControlWrapper e11oxwlm2"
                                      >
                                        <Flex
                                          className="css-1ke1xob-FieldControlWrapper e11oxwlm2"
                                        >
                                          <Base
                                            className="e11oxwlm2 css-w4o1g8-FieldControlWrapper"
                                          >
                                            <div
                                              className="e11oxwlm2 css-w4o1g8-FieldControlWrapper"
                                              is={null}
                                            >
                                              <FieldControlStyled
                                                alignRight={false}
                                              >
                                                <Component
                                                  alignRight={false}
                                                  className="css-1pkvhmy-FieldControlStyled e11oxwlm1"
                                                >
                                                  <Box
                                                    className="css-1pkvhmy-FieldControlStyled e11oxwlm1"
                                                  >
                                                    <Base
                                                      className="e11oxwlm1 css-wkkbba-FieldControlStyled"
                                                    >
                                                      <div
                                                        className="e11oxwlm1 css-wkkbba-FieldControlStyled"
                                                        is={null}
                                                      >
                                                        <Observer>
                                                          <Input
                                                            disabled={false}
                                                            error={false}
                                                            field={[Function]}
                                                            id="fieldName"
                                                            initialData={Object {}}
                                                            innerRef={[Function]}
                                                            name="fieldName"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <input
<<<<<<< HEAD
                                                              className="css-13yodx8-Input-inputStyles e1xej46s0"
=======
                                                              className="css-pzg7em-Input-inputStyles e1ebb8kf0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                              disabled={false}
                                                              id="fieldName"
                                                              name="fieldName"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                              value=""
                                                            />
                                                          </Input>
                                                        </Observer>
                                                      </div>
                                                    </Base>
                                                  </Box>
                                                </Component>
                                              </FieldControlStyled>
                                              <FieldControlState
                                                flexibleControlStateSize={false}
                                              >
                                                <Component
                                                  className="css-1j6hng-FieldControlState eydu7x30"
                                                  flexibleControlStateSize={false}
                                                >
                                                  <Flex
                                                    className="css-1j6hng-FieldControlState eydu7x30"
                                                  >
                                                    <Base
                                                      className="eydu7x30 css-1fqbh7r-FieldControlState"
                                                    >
                                                      <div
                                                        className="eydu7x30 css-1fqbh7r-FieldControlState"
                                                        is={null}
                                                      >
                                                        <ControlState
                                                          model={
                                                            FormModel {
                                                              "api": Client {},
                                                              "errors": Object {},
                                                              "fieldDescriptor": Map {
                                                                "fieldName" => Object {
                                                                  "children": [Function],
                                                                  "className": undefined,
                                                                  "field": [Function],
                                                                  "flexibleControlStateSize": false,
                                                                  "hideErrorMessage": false,
                                                                  "name": "fieldName",
                                                                  "type": "text",
                                                                },
                                                              },
                                                              "fieldState": Object {},
                                                              "fields": Object {},
                                                              "formState": undefined,
                                                              "initialData": Object {},
                                                              "options": Object {
                                                                "allowUndo": false,
                                                                "apiEndpoint": undefined,
                                                                "apiMethod": undefined,
                                                                "onFieldChange": undefined,
                                                                "onSubmitError": [Function],
                                                                "onSubmitSuccess": [Function],
                                                                "resetOnError": undefined,
                                                                "saveOnBlur": false,
                                                              },
                                                              "snapshots": Array [
                                                                Map {},
                                                              ],
                                                            }
                                                          }
                                                          name="fieldName"
                                                        >
                                                          <Observer />
                                                          <Observer />
                                                        </ControlState>
                                                      </div>
                                                    </Base>
                                                  </Flex>
                                                </Component>
                                              </FieldControlState>
                                            </div>
                                          </Base>
                                        </Flex>
                                      </Component>
                                    </FieldControlWrapper>
                                    <Observer />
                                  </div>
                                </Base>
                              </Box>
                            </Component>
                          </FieldControlErrorWrapper>
                        </FieldControl>
                      </div>
                    </Base>
                  </Flex>
                </Component>
              </FieldWrapper>
            </Field>
          </FormField>
        </InputField>
      </TextField>
    </div>
    <StyledFooter>
      <div
        className="css-lvf625-StyledFooter e1qxu7hz0"
      >
        <Observer>
          <Button
            align="center"
            data-test-id="form-submit"
            disabled={false}
            priority="primary"
            type="submit"
          >
            <StyledButton
              aria-disabled={false}
              aria-label="Save Changes"
              data-test-id="form-submit"
              disabled={false}
              onClick={[Function]}
              priority="primary"
              role="button"
              type="submit"
            >
              <ForwardRef
                aria-disabled={false}
                aria-label="Save Changes"
<<<<<<< HEAD
                className="css-1qchtmp-StyledButton-getColors e12ma6z0"
=======
                className="css-1msljz8-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                data-test-id="form-submit"
                disabled={false}
                onClick={[Function]}
                priority="primary"
                role="button"
                type="submit"
              >
                <button
                  aria-disabled={false}
                  aria-label="Save Changes"
<<<<<<< HEAD
                  className="css-1qchtmp-StyledButton-getColors e12ma6z0"
=======
                  className="css-1msljz8-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                  data-test-id="form-submit"
                  onClick={[Function]}
                  role="button"
                  type="submit"
                >
                  <ButtonLabel
                    align="center"
                    priority="primary"
                  >
                    <Component
<<<<<<< HEAD
                      align="center"
                      className="css-oo1m2a-ButtonLabel e12ma6z1"
                      priority="primary"
                    >
                      <span
                        className="css-oo1m2a-ButtonLabel e12ma6z1"
=======
                      className="css-ga4b18-ButtonLabel e7bsqvz1"
                      priority="primary"
                    >
                      <span
                        className="css-ga4b18-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                      >
                        Save Changes
                      </span>
                    </Component>
                  </ButtonLabel>
                </button>
              </ForwardRef>
            </StyledButton>
          </Button>
        </Observer>
      </div>
    </StyledFooter>
  </form>
</Form>
`;
