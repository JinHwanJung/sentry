// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationTeamProjects Should render 1`] = `
<TeamProjects
  api={Client {}}
  location={
    Object {
      "query": Object {},
    }
  }
  organization={
    Object {
      "access": Array [
        "org:read",
        "org:write",
        "org:admin",
        "org:integrations",
        "project:read",
        "project:write",
        "project:admin",
        "team:read",
        "team:write",
        "team:admin",
      ],
      "features": Array [],
      "id": "3",
      "name": "Organization Name",
      "onboardingTasks": Array [],
      "projects": Array [],
      "scrapeJavaScript": true,
      "slug": "org-slug",
      "status": Object {
        "id": "active",
        "name": "active",
      },
      "teams": Array [],
    }
  }
  params={
    Object {
      "orgId": "org-slug",
      "teamId": "team-slug",
    }
  }
>
  <Panel>
    <Component
<<<<<<< HEAD
      className="css-10qfvek-Panel e1laxa7d0"
    >
      <div
        className="css-10qfvek-Panel e1laxa7d0"
=======
      className="css-yahxlu-Panel e16u4s2c0"
    >
      <div
        className="css-yahxlu-Panel e16u4s2c0"
>>>>>>> build(travis): yarn --pnp [WIP]
      >
        <PanelHeader
          hasButtons={true}
        >
          <Component
<<<<<<< HEAD
            className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
=======
            className="css-jmvceg-PanelHeader-getPadding e1o9kety0"
>>>>>>> build(travis): yarn --pnp [WIP]
            hasButtons={true}
          >
            <Flex
              align="center"
<<<<<<< HEAD
              className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
=======
              className="css-jmvceg-PanelHeader-getPadding e1o9kety0"
>>>>>>> build(travis): yarn --pnp [WIP]
              justify="space-between"
            >
              <Base
                align="center"
<<<<<<< HEAD
                className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
                justify="space-between"
              >
                <div
                  className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
=======
                className="e1o9kety0 css-19i62qd-PanelHeader-getPadding"
                justify="space-between"
              >
                <div
                  className="e1o9kety0 css-19i62qd-PanelHeader-getPadding"
>>>>>>> build(travis): yarn --pnp [WIP]
                  is={null}
                >
                  <div>
                    Projects
                  </div>
                  <div
                    style={
                      Object {
                        "textTransform": "none",
                      }
                    }
                  >
                    <DropdownAutoComplete
                      alignMenu="right"
                      emptyMessage="No projects"
                      items={
                        Array [
                          Object {
                            "label": <ProjectListElement>
                              project-slug
                            </ProjectListElement>,
                            "searchKey": "project-slug",
                            "value": "2",
                          },
                          Object {
                            "label": <ProjectListElement>
                              project-slug-2
                            </ProjectListElement>,
                            "searchKey": "project-slug-2",
                            "value": "3",
                          },
                        ]
                      }
                      onChange={[Function]}
                      onSelect={[Function]}
                    >
                      <DropdownAutoCompleteMenu
                        alignMenu="right"
                        blendCorner={true}
                        emptyMessage="No projects"
                        items={
                          Array [
                            Object {
                              "label": <ProjectListElement>
                                project-slug
                              </ProjectListElement>,
                              "searchKey": "project-slug",
                              "value": "2",
                            },
                            Object {
                              "label": <ProjectListElement>
                                project-slug-2
                              </ProjectListElement>,
                              "searchKey": "project-slug-2",
                              "value": "3",
                            },
                          ]
                        }
                        maxHeight={300}
                        onChange={[Function]}
                        onSelect={[Function]}
                        searchPlaceholder="Filter search"
                      >
                        <AutoComplete
                          closeOnSelect={true}
                          disabled={false}
                          inputIsActor={false}
                          itemToString={[Function]}
                          onSelect={[Function]}
                          resetInputOnClose={true}
                          shouldSelectWithEnter={true}
                          shouldSelectWithTab={false}
                        >
                          <DropdownMenu
                            closeOnEscape={true}
                            isOpen={false}
                            keepMenuOpen={false}
                            onClickOutside={[Function]}
                          >
                            <AutoCompleteRoot>
                              <Component
                                className="css-6v04yn-AutoCompleteRoot egdot0r0"
                              >
                                <div
                                  className="css-6v04yn-AutoCompleteRoot egdot0r0"
                                >
                                  <Actor
                                    innerRef={[Function]}
                                    isOpen={false}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    style={
                                      Object {
                                        "outline": "none",
                                      }
                                    }
                                    tabIndex={-1}
                                  >
                                    <div
<<<<<<< HEAD
                                      className="css-12n6mek-Actor e53us8t0"
=======
                                      className="css-17fe80j-Actor evu979k0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "outline": "none",
                                        }
                                      }
                                      tabIndex={-1}
                                    >
                                      <DropdownButton
                                        isOpen={false}
                                        size="xsmall"
                                      >
                                        <StyledButton
                                          isOpen={false}
                                          size="xsmall"
                                        >
<<<<<<< HEAD
                                          <ForwardRef
                                            className="css-a2adl3-StyledButton e1yghndz1"
=======
                                          <Component
                                            className="css-o27a2e-StyledButton e1a9ys5x1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                            isOpen={false}
                                            size="xsmall"
                                          >
                                            <Button
<<<<<<< HEAD
                                              align="center"
                                              className="css-a2adl3-StyledButton e1yghndz1"
=======
                                              className="css-o27a2e-StyledButton e1a9ys5x1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                              disabled={false}
                                              innerRef={null}
                                              size="xsmall"
                                            >
                                              <StyledButton
                                                aria-disabled={false}
<<<<<<< HEAD
                                                className="css-a2adl3-StyledButton e1yghndz1"
=======
                                                className="css-o27a2e-StyledButton e1a9ys5x1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                disabled={false}
                                                innerRef={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ForwardRef
                                                  aria-disabled={false}
<<<<<<< HEAD
                                                  className="e1yghndz1 css-1r13y1z-StyledButton-getColors-StyledButton e12ma6z0"
                                                  disabled={false}
=======
                                                  className="e1a9ys5x1 css-108zzii-StyledButton-getColors-StyledButton e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <button
                                                    aria-disabled={false}
<<<<<<< HEAD
                                                    className="e1yghndz1 css-1r13y1z-StyledButton-getColors-StyledButton e12ma6z0"
=======
                                                    className="e1a9ys5x1 css-108zzii-StyledButton-getColors-StyledButton e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                    onClick={[Function]}
                                                    role="button"
                                                    size="xsmall"
                                                  >
                                                    <ButtonLabel
                                                      align="center"
                                                      size="xsmall"
                                                    >
                                                      <Component
<<<<<<< HEAD
                                                        align="center"
                                                        className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                        size="xsmall"
                                                      >
                                                        <span
                                                          className="css-1bqncjo-ButtonLabel e12ma6z1"
=======
                                                        className="css-uthd1f-ButtonLabel e7bsqvz1"
                                                        size="xsmall"
                                                      >
                                                        <span
                                                          className="css-uthd1f-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                        >
                                                          Add Project
                                                          <StyledChevronDown>
                                                            <Component
                                                              className="css-17v3tc-StyledChevronDown e1a9ys5x0"
                                                            >
                                                              <InlineSvg
                                                                className="css-17v3tc-StyledChevronDown e1a9ys5x0"
                                                                src="icon-chevron-down"
                                                              >
                                                                <StyledSvg
                                                                  className="css-17v3tc-StyledChevronDown e1a9ys5x0"
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <svg
                                                                    className="e1a9ys5x0 css-1gdv3x4-StyledSvg-StyledChevronDown ebb48o80"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </Component>
                                                          </StyledChevronDown>
                                                        </span>
                                                      </Component>
                                                    </ButtonLabel>
                                                  </button>
                                                </ForwardRef>
                                              </StyledButton>
                                            </Button>
                                          </ForwardRef>
                                        </StyledButton>
                                      </DropdownButton>
                                    </div>
                                  </Actor>
                                </div>
                              </Component>
                            </AutoCompleteRoot>
                          </DropdownMenu>
                        </AutoComplete>
                      </DropdownAutoCompleteMenu>
                    </DropdownAutoComplete>
                  </div>
                </div>
              </Base>
            </Flex>
          </Component>
        </PanelHeader>
        <PanelBody
          direction="column"
          disablePadding={true}
          flex={false}
        >
          <div
            className="css-a4ya23-textStyles"
          >
            <StyledPanelItem
              key="2"
              p={2}
            >
              <Base
<<<<<<< HEAD
                className="css-1usthj3-PanelItem-StyledPanelItem eqsa6vb1"
                p={2}
              >
                <div
                  className="css-1usthj3-PanelItem-StyledPanelItem eqsa6vb1"
=======
                className="css-15fe8h6-PanelItem-StyledPanelItem e1ir3m6z1"
              >
                <div
                  className="css-15fe8h6-PanelItem-StyledPanelItem e1ir3m6z1"
>>>>>>> build(travis): yarn --pnp [WIP]
                  is={null}
                >
                  <ProjectItem
                    organization={
                      Object {
                        "access": Array [
                          "org:read",
                          "org:write",
                          "org:admin",
                          "org:integrations",
                          "project:read",
                          "project:write",
                          "project:admin",
                          "team:read",
                          "team:write",
                          "team:admin",
                        ],
                        "features": Array [],
                        "id": "3",
                        "name": "Organization Name",
                        "onboardingTasks": Array [],
                        "projects": Array [],
                        "scrapeJavaScript": true,
                        "slug": "org-slug",
                        "status": Object {
                          "id": "active",
                          "name": "active",
                        },
                        "teams": Array [],
                      }
                    }
                    project={
                      Object {
                        "environments": Array [],
                        "hasAccess": true,
                        "id": "2",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Project Name",
                        "slug": "project-slug",
                        "teams": Array [
                          undefined,
                        ],
                      }
                    }
                  >
                    <Container
                      key="2"
                    >
                      <div
                        className="css-9ku3o0-Container e11dd86m0"
                      >
                        <BookmarkLink
                          isBookmarked={false}
                          onToggle={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          project={
                            Object {
                              "environments": Array [],
                              "hasAccess": true,
                              "id": "2",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name",
                              "slug": "project-slug",
                              "teams": Array [
                                undefined,
                              ],
                            }
                          }
                        >
                          <withApi(BookmarkStar)
                            className="css-10z01iz-BookmarkLink e11dd86m1"
                            isBookmarked={false}
                            onToggle={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            project={
                              Object {
                                "environments": Array [],
                                "hasAccess": true,
                                "id": "2",
                                "isBookmarked": false,
                                "isMember": true,
                                "name": "Project Name",
                                "slug": "project-slug",
                                "teams": Array [
                                  undefined,
                                ],
                              }
                            }
                          >
                            <BookmarkStar
                              api={Client {}}
                              className="css-10z01iz-BookmarkLink e11dd86m1"
                              isBookmarked={false}
                              onToggle={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              project={
                                Object {
                                  "environments": Array [],
                                  "hasAccess": true,
                                  "id": "2",
                                  "isBookmarked": false,
                                  "isMember": true,
                                  "name": "Project Name",
                                  "slug": "project-slug",
                                  "teams": Array [
                                    undefined,
                                  ],
                                }
                              }
                            >
                              <Star
                                className="css-10z01iz-BookmarkLink e11dd86m1"
                                isBookmarked={false}
                                onClick={[Function]}
                                src="icon-star-small-filled"
                              >
                                <InlineSvg
<<<<<<< HEAD
                                  className="enngb6z1 css-1j5sthu-Star-BookmarkLink e5ekdrk0"
=======
                                  className="e11dd86m1 css-1j5sthu-Star-BookmarkLink e3oiqkq0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                  isBookmarked={false}
                                  onClick={[Function]}
                                  src="icon-star-small-filled"
                                >
                                  <StyledSvg
<<<<<<< HEAD
                                    className="enngb6z1 css-1j5sthu-Star-BookmarkLink e5ekdrk0"
=======
                                    className="e11dd86m1 css-1j5sthu-Star-BookmarkLink e3oiqkq0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                    height="1em"
                                    isBookmarked={false}
                                    onClick={[Function]}
                                    viewBox={Object {}}
                                    width="1em"
                                  >
                                    <svg
<<<<<<< HEAD
                                      className="enngb6z1 e5ekdrk0 css-85qks9-StyledSvg-Star-BookmarkLink e2idor0"
=======
                                      className="e11dd86m1 e3oiqkq0 css-85qks9-StyledSvg-Star-BookmarkLink ebb48o80"
>>>>>>> build(travis): yarn --pnp [WIP]
                                      height="1em"
                                      onClick={[Function]}
                                      viewBox={Object {}}
                                      width="1em"
                                    >
                                      <use
                                        href="#test"
                                        xlinkHref="#test"
                                      />
                                    </svg>
                                  </StyledSvg>
                                </InlineSvg>
                              </Star>
                            </BookmarkStar>
                          </withApi(BookmarkStar)>
                        </BookmarkLink>
                        <Link
                          to="/settings/org-slug/projects/project-slug/"
                        >
                          <Link
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/settings/org-slug/projects/project-slug/"
                          >
                            <a
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ProjectLabel
                                project={
                                  Object {
                                    "environments": Array [],
                                    "hasAccess": true,
                                    "id": "2",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name",
                                    "slug": "project-slug",
                                    "teams": Array [
                                      undefined,
                                    ],
                                  }
                                }
                              >
                                <span
                                  className="project-label"
                                  project={
                                    Object {
                                      "environments": Array [],
                                      "hasAccess": true,
                                      "id": "2",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name",
                                      "slug": "project-slug",
                                      "teams": Array [
                                        undefined,
                                      ],
                                    }
                                  }
                                >
                                  <span
                                    className="project-name"
                                  >
                                    project-slug
                                  </span>
                                </span>
                              </ProjectLabel>
                            </a>
                          </Link>
                        </Link>
                      </div>
                    </Container>
                  </ProjectItem>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    disabled={true}
                    position="top"
                    title="You do not have enough permission to change project association."
                  >
                    <Button
                      align="center"
                      disabled={false}
                      onClick={[Function]}
                      size="small"
                    >
                      <StyledButton
                        aria-disabled={false}
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="small"
                      >
                        <ForwardRef
                          aria-disabled={false}
<<<<<<< HEAD
                          className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                          disabled={false}
=======
                          className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                          onClick={[Function]}
                          role="button"
                          size="small"
                        >
                          <button
                            aria-disabled={false}
<<<<<<< HEAD
                            className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                            className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                            onClick={[Function]}
                            role="button"
                            size="small"
                          >
                            <ButtonLabel
                              align="center"
                              size="small"
                            >
                              <Component
<<<<<<< HEAD
                                align="center"
                                className="css-1h693nz-ButtonLabel e12ma6z1"
                                size="small"
                              >
                                <span
                                  className="css-1h693nz-ButtonLabel e12ma6z1"
=======
                                className="css-7ui8bl-ButtonLabel e7bsqvz1"
                                size="small"
                              >
                                <span
                                  className="css-7ui8bl-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                >
                                  <RemoveIcon>
                                    <Component
                                      className="css-1e2j5j0-RemoveIcon e1ir3m6z0"
                                    >
                                      <InlineSvg
                                        className="css-1e2j5j0-RemoveIcon e1ir3m6z0"
                                        src="icon-circle-subtract"
                                      >
                                        <StyledSvg
                                          className="css-1e2j5j0-RemoveIcon e1ir3m6z0"
                                          height="1em"
                                          viewBox={Object {}}
                                          width="1em"
                                        >
                                          <svg
                                            className="e1ir3m6z0 css-10g0ex9-StyledSvg-RemoveIcon ebb48o80"
                                            height="1em"
                                            viewBox={Object {}}
                                            width="1em"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </StyledSvg>
                                      </InlineSvg>
                                    </Component>
                                  </RemoveIcon>
                                   
                                  Remove
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </ForwardRef>
                      </StyledButton>
                    </Button>
                  </Tooltip>
                </div>
              </Base>
            </StyledPanelItem>
            <StyledPanelItem
              key="3"
              p={2}
            >
              <Base
<<<<<<< HEAD
                className="css-1usthj3-PanelItem-StyledPanelItem eqsa6vb1"
                p={2}
              >
                <div
                  className="css-1usthj3-PanelItem-StyledPanelItem eqsa6vb1"
=======
                className="css-15fe8h6-PanelItem-StyledPanelItem e1ir3m6z1"
              >
                <div
                  className="css-15fe8h6-PanelItem-StyledPanelItem e1ir3m6z1"
>>>>>>> build(travis): yarn --pnp [WIP]
                  is={null}
                >
                  <ProjectItem
                    organization={
                      Object {
                        "access": Array [
                          "org:read",
                          "org:write",
                          "org:admin",
                          "org:integrations",
                          "project:read",
                          "project:write",
                          "project:admin",
                          "team:read",
                          "team:write",
                          "team:admin",
                        ],
                        "features": Array [],
                        "id": "3",
                        "name": "Organization Name",
                        "onboardingTasks": Array [],
                        "projects": Array [],
                        "scrapeJavaScript": true,
                        "slug": "org-slug",
                        "status": Object {
                          "id": "active",
                          "name": "active",
                        },
                        "teams": Array [],
                      }
                    }
                    project={
                      Object {
                        "environments": Array [],
                        "hasAccess": true,
                        "id": "3",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Project Name 2",
                        "slug": "project-slug-2",
                        "teams": Array [],
                      }
                    }
                  >
                    <Container
                      key="3"
                    >
                      <div
                        className="css-9ku3o0-Container e11dd86m0"
                      >
                        <BookmarkLink
                          isBookmarked={false}
                          onToggle={[Function]}
                          organization={
                            Object {
                              "access": Array [
                                "org:read",
                                "org:write",
                                "org:admin",
                                "org:integrations",
                                "project:read",
                                "project:write",
                                "project:admin",
                                "team:read",
                                "team:write",
                                "team:admin",
                              ],
                              "features": Array [],
                              "id": "3",
                              "name": "Organization Name",
                              "onboardingTasks": Array [],
                              "projects": Array [],
                              "scrapeJavaScript": true,
                              "slug": "org-slug",
                              "status": Object {
                                "id": "active",
                                "name": "active",
                              },
                              "teams": Array [],
                            }
                          }
                          project={
                            Object {
                              "environments": Array [],
                              "hasAccess": true,
                              "id": "3",
                              "isBookmarked": false,
                              "isMember": true,
                              "name": "Project Name 2",
                              "slug": "project-slug-2",
                              "teams": Array [],
                            }
                          }
                        >
                          <withApi(BookmarkStar)
                            className="css-10z01iz-BookmarkLink e11dd86m1"
                            isBookmarked={false}
                            onToggle={[Function]}
                            organization={
                              Object {
                                "access": Array [
                                  "org:read",
                                  "org:write",
                                  "org:admin",
                                  "org:integrations",
                                  "project:read",
                                  "project:write",
                                  "project:admin",
                                  "team:read",
                                  "team:write",
                                  "team:admin",
                                ],
                                "features": Array [],
                                "id": "3",
                                "name": "Organization Name",
                                "onboardingTasks": Array [],
                                "projects": Array [],
                                "scrapeJavaScript": true,
                                "slug": "org-slug",
                                "status": Object {
                                  "id": "active",
                                  "name": "active",
                                },
                                "teams": Array [],
                              }
                            }
                            project={
                              Object {
                                "environments": Array [],
                                "hasAccess": true,
                                "id": "3",
                                "isBookmarked": false,
                                "isMember": true,
                                "name": "Project Name 2",
                                "slug": "project-slug-2",
                                "teams": Array [],
                              }
                            }
                          >
                            <BookmarkStar
                              api={Client {}}
                              className="css-10z01iz-BookmarkLink e11dd86m1"
                              isBookmarked={false}
                              onToggle={[Function]}
                              organization={
                                Object {
                                  "access": Array [
                                    "org:read",
                                    "org:write",
                                    "org:admin",
                                    "org:integrations",
                                    "project:read",
                                    "project:write",
                                    "project:admin",
                                    "team:read",
                                    "team:write",
                                    "team:admin",
                                  ],
                                  "features": Array [],
                                  "id": "3",
                                  "name": "Organization Name",
                                  "onboardingTasks": Array [],
                                  "projects": Array [],
                                  "scrapeJavaScript": true,
                                  "slug": "org-slug",
                                  "status": Object {
                                    "id": "active",
                                    "name": "active",
                                  },
                                  "teams": Array [],
                                }
                              }
                              project={
                                Object {
                                  "environments": Array [],
                                  "hasAccess": true,
                                  "id": "3",
                                  "isBookmarked": false,
                                  "isMember": true,
                                  "name": "Project Name 2",
                                  "slug": "project-slug-2",
                                  "teams": Array [],
                                }
                              }
                            >
                              <Star
                                className="css-10z01iz-BookmarkLink e11dd86m1"
                                isBookmarked={false}
                                onClick={[Function]}
                                src="icon-star-small-filled"
                              >
                                <InlineSvg
<<<<<<< HEAD
                                  className="enngb6z1 css-1j5sthu-Star-BookmarkLink e5ekdrk0"
=======
                                  className="e11dd86m1 css-1j5sthu-Star-BookmarkLink e3oiqkq0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                  isBookmarked={false}
                                  onClick={[Function]}
                                  src="icon-star-small-filled"
                                >
                                  <StyledSvg
<<<<<<< HEAD
                                    className="enngb6z1 css-1j5sthu-Star-BookmarkLink e5ekdrk0"
=======
                                    className="e11dd86m1 css-1j5sthu-Star-BookmarkLink e3oiqkq0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                    height="1em"
                                    isBookmarked={false}
                                    onClick={[Function]}
                                    viewBox={Object {}}
                                    width="1em"
                                  >
                                    <svg
<<<<<<< HEAD
                                      className="enngb6z1 e5ekdrk0 css-85qks9-StyledSvg-Star-BookmarkLink e2idor0"
=======
                                      className="e11dd86m1 e3oiqkq0 css-85qks9-StyledSvg-Star-BookmarkLink ebb48o80"
>>>>>>> build(travis): yarn --pnp [WIP]
                                      height="1em"
                                      onClick={[Function]}
                                      viewBox={Object {}}
                                      width="1em"
                                    >
                                      <use
                                        href="#test"
                                        xlinkHref="#test"
                                      />
                                    </svg>
                                  </StyledSvg>
                                </InlineSvg>
                              </Star>
                            </BookmarkStar>
                          </withApi(BookmarkStar)>
                        </BookmarkLink>
                        <Link
                          to="/settings/org-slug/projects/project-slug-2/"
                        >
                          <Link
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/settings/org-slug/projects/project-slug-2/"
                          >
                            <a
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ProjectLabel
                                project={
                                  Object {
                                    "environments": Array [],
                                    "hasAccess": true,
                                    "id": "3",
                                    "isBookmarked": false,
                                    "isMember": true,
                                    "name": "Project Name 2",
                                    "slug": "project-slug-2",
                                    "teams": Array [],
                                  }
                                }
                              >
                                <span
                                  className="project-label"
                                  project={
                                    Object {
                                      "environments": Array [],
                                      "hasAccess": true,
                                      "id": "3",
                                      "isBookmarked": false,
                                      "isMember": true,
                                      "name": "Project Name 2",
                                      "slug": "project-slug-2",
                                      "teams": Array [],
                                    }
                                  }
                                >
                                  <span
                                    className="project-name"
                                  >
                                    project-slug-2
                                  </span>
                                </span>
                              </ProjectLabel>
                            </a>
                          </Link>
                        </Link>
                      </div>
                    </Container>
                  </ProjectItem>
                  <Tooltip
                    containerDisplayMode="inline-block"
                    disabled={true}
                    position="top"
                    title="You do not have enough permission to change project association."
                  >
                    <Button
                      align="center"
                      disabled={false}
                      onClick={[Function]}
                      size="small"
                    >
                      <StyledButton
                        aria-disabled={false}
                        disabled={false}
                        onClick={[Function]}
                        role="button"
                        size="small"
                      >
                        <ForwardRef
                          aria-disabled={false}
<<<<<<< HEAD
                          className="css-1uhlusb-StyledButton-getColors e12ma6z0"
                          disabled={false}
=======
                          className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                          onClick={[Function]}
                          role="button"
                          size="small"
                        >
                          <button
                            aria-disabled={false}
<<<<<<< HEAD
                            className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                            className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                            onClick={[Function]}
                            role="button"
                            size="small"
                          >
                            <ButtonLabel
                              align="center"
                              size="small"
                            >
                              <Component
<<<<<<< HEAD
                                align="center"
                                className="css-1h693nz-ButtonLabel e12ma6z1"
                                size="small"
                              >
                                <span
                                  className="css-1h693nz-ButtonLabel e12ma6z1"
=======
                                className="css-7ui8bl-ButtonLabel e7bsqvz1"
                                size="small"
                              >
                                <span
                                  className="css-7ui8bl-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                >
                                  <RemoveIcon>
                                    <Component
                                      className="css-1e2j5j0-RemoveIcon e1ir3m6z0"
                                    >
                                      <InlineSvg
                                        className="css-1e2j5j0-RemoveIcon e1ir3m6z0"
                                        src="icon-circle-subtract"
                                      >
                                        <StyledSvg
                                          className="css-1e2j5j0-RemoveIcon e1ir3m6z0"
                                          height="1em"
                                          viewBox={Object {}}
                                          width="1em"
                                        >
                                          <svg
                                            className="e1ir3m6z0 css-10g0ex9-StyledSvg-RemoveIcon ebb48o80"
                                            height="1em"
                                            viewBox={Object {}}
                                            width="1em"
                                          >
                                            <use
                                              href="#test"
                                              xlinkHref="#test"
                                            />
                                          </svg>
                                        </StyledSvg>
                                      </InlineSvg>
                                    </Component>
                                  </RemoveIcon>
                                   
                                  Remove
                                </span>
                              </Component>
                            </ButtonLabel>
                          </button>
                        </ForwardRef>
                      </StyledButton>
                    </Button>
                  </Tooltip>
                </div>
              </Base>
            </StyledPanelItem>
          </div>
        </PanelBody>
      </div>
    </Component>
  </Panel>
  <Pagination
    api={Client {}}
    className="css-1yt0wm7-streamCss"
    location={
      Object {
        "query": Object {},
      }
    }
    onCursor={[Function]}
    organization={
      Object {
        "access": Array [
          "org:read",
          "org:write",
          "org:admin",
          "org:integrations",
          "project:read",
          "project:write",
          "project:admin",
          "team:read",
          "team:write",
          "team:admin",
        ],
        "features": Array [],
        "id": "3",
        "name": "Organization Name",
        "onboardingTasks": Array [],
        "projects": Array [],
        "scrapeJavaScript": true,
        "slug": "org-slug",
        "status": Object {
          "id": "active",
          "name": "active",
        },
        "teams": Array [],
      }
    }
    params={
      Object {
        "orgId": "org-slug",
        "teamId": "team-slug",
      }
    }
  />
</TeamProjects>
`;
