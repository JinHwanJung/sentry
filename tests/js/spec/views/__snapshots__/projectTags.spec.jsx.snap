// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <SettingsPageHeading
        noTitleStyles={false}
        title="Tags"
      >
        <Wrapper>
          <div
            className="css-1r5ylk7-Wrapper e1ievzxl2"
          >
            <Flex
              align="center"
            >
              <Base
                align="center"
                className="css-5ipae5"
              >
                <div
                  className="css-5ipae5"
                  is={null}
                >
                  <Title
                    styled={false}
                  >
                    <Base
                      className="css-1ky52ze-Title e1ievzxl0"
                    >
                      <div
                        className="css-1ky52ze-Title e1ievzxl0"
                        is={null}
                      >
                        <HeaderTitle>
                          <h4
                            className="css-1w8ttcn-HeaderTitle elc10ae2"
                          >
                            Tags
                          </h4>
                        </HeaderTitle>
                      </div>
                    </Base>
                  </Title>
                </div>
              </Base>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <PermissionAlert
        access={
          Array [
            "project:write",
          ]
        }
      >
        <withConfig(AccessContainer)
          access={
            Array [
              "project:write",
            ]
          }
        >
          <AccessContainer
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
          >
            <Access
              access={
                Array [
                  "project:write",
                ]
              }
              config={
                Object {
                  "features": Set {},
                  "messages": Array [],
                  "user": Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  },
                }
              }
              configUser={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "org:integrations",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              renderNoAccessMessage={false}
              requireAll={true}
            />
          </AccessContainer>
        </withConfig(AccessContainer)>
      </PermissionAlert>
      <TextBlock>
        <Component
          className="css-1geyb25-TextBlock e12j2fov0"
        >
          <div
            className="css-1geyb25-TextBlock e12j2fov0"
          >
            <span
              key="5"
            >
              <span
                key="0"
              >
                Each event in Sentry may be annotated with various tags (key and value pairs).
                 Learn how to 
              </span>
              <ForwardRef
                href="https://docs.sentry.io/hosted/learn/context/"
                key="2"
                rel="noreferrer noopener"
                target="_blank"
              >
                <a
                  href="https://docs.sentry.io/hosted/learn/context/"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  <span
                    key="1"
                  >
                    add custom tags
                  </span>
                </a>
              </ForwardRef>
              <span
                key="3"
              >
                .
              </span>
            </span>
          </div>
        </Component>
      </TextBlock>
      <Panel>
        <Component
<<<<<<< HEAD
          className="css-10qfvek-Panel e1laxa7d0"
        >
          <div
            className="css-10qfvek-Panel e1laxa7d0"
          >
            <PanelHeader>
              <Component
                className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
              >
                <Flex
                  align="center"
                  className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
=======
          className="css-yahxlu-Panel e16u4s2c0"
        >
          <div
            className="css-yahxlu-Panel e16u4s2c0"
          >
            <PanelHeader>
              <Component
                className="css-xhx6pj-PanelHeader-getPadding e1o9kety0"
              >
                <Flex
                  align="center"
                  className="css-xhx6pj-PanelHeader-getPadding e1o9kety0"
>>>>>>> build(travis): yarn --pnp [WIP]
                  justify="space-between"
                >
                  <Base
                    align="center"
<<<<<<< HEAD
                    className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                    justify="space-between"
                  >
                    <div
                      className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
=======
                    className="e1o9kety0 css-b7ices-PanelHeader-getPadding"
                    justify="space-between"
                  >
                    <div
                      className="e1o9kety0 css-b7ices-PanelHeader-getPadding"
>>>>>>> build(travis): yarn --pnp [WIP]
                      is={null}
                    >
                      <Flex>
                        <Base
                          className="css-sncxrr"
                        >
                          <div
                            className="css-sncxrr"
                            is={null}
                          >
                            <Box
                              flex="1"
                            >
                              <Base
                                className="css-vti0ei"
                                flex="1"
                              >
                                <div
                                  className="css-vti0ei"
                                  is={null}
                                >
                                  Tags
                                </div>
                              </Base>
                            </Box>
                          </div>
                        </Base>
                      </Flex>
                    </div>
                  </Base>
                </Flex>
              </Component>
            </PanelHeader>
            <PanelBody
              direction="column"
              disablePadding={true}
              flex={false}
            >
              <div
                className="css-a4ya23-textStyles"
              >
                <withConfig(AccessContainer)
                  access={
                    Array [
                      "project:write",
                    ]
                  }
                >
                  <AccessContainer
                    access={
                      Array [
                        "project:write",
                      ]
                    }
                    config={
                      Object {
                        "features": Set {},
                        "messages": Array [],
                        "user": Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        },
                      }
                    }
                  >
                    <Access
                      access={
                        Array [
                          "project:write",
                        ]
                      }
                      config={
                        Object {
                          "features": Set {},
                          "messages": Array [],
                          "user": Object {
                            "email": "foo@example.com",
                            "flags": Object {
                              "newsletter_consent_prompt": false,
                            },
                            "hasPasswordAuth": true,
                            "id": "1",
                            "isAuthenticated": true,
                            "name": "Foo Bar",
                            "options": Object {
                              "timezone": "UTC",
                            },
                            "permissions": Set {},
                            "username": "foo@example.com",
                          },
                        }
                      }
                      configUser={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "org:integrations",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "active",
                            "name": "active",
                          },
                          "teams": Array [],
                        }
                      }
                      renderNoAccessMessage={false}
                      requireAll={true}
                    >
                      <PanelItem
                        align="center"
                        className="ref-tag-row"
                        key="browser"
                        p={0}
                      >
                        <Base
                          align="center"
                          className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                          p={0}
                        >
                          <div
                            className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                            is={null}
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <Base
                                align="flex-end"
                                className="css-14o7hgh"
                                flex="1"
                                p={2}
                              >
                                <div
                                  className="css-14o7hgh"
                                  is={null}
                                >
                                  <span>
                                    browser
                                  </span>
                                </div>
                              </Base>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <Base
                                align="center"
                                className="css-p3ab1k"
                                p={2}
                              >
                                <div
                                  className="css-p3ab1k"
                                  is={null}
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    disabled={true}
                                    position="top"
                                    title="This tag cannot be deleted."
                                  >
                                    <LinkWithConfirmation
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={false}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                        stopPropagation={false}
                                      >
                                        <a
                                          className=""
                                          disabled={false}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            align="center"
                                            data-test-id="delete"
                                            disabled={false}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-disabled={false}
                                              data-test-id="delete"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <ForwardRef
                                                aria-disabled={false}
<<<<<<< HEAD
                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                                                className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                data-test-id="delete"
                                                disabled={false}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  aria-disabled={false}
<<<<<<< HEAD
                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                                                  className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                  data-test-id="delete"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="xsmall"
                                                  >
                                                    <Component
<<<<<<< HEAD
                                                      align="center"
                                                      className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-1bqncjo-ButtonLabel e12ma6z1"
=======
                                                      className="css-uthd1f-ButtonLabel e7bsqvz1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
<<<<<<< HEAD
                                                            className="css-ljhpxy-Icon e12ma6z2"
=======
                                                            className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
<<<<<<< HEAD
                                                              className="css-ljhpxy-Icon e12ma6z2"
=======
                                                              className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
<<<<<<< HEAD
                                                                  className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
=======
                                                                  className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
<<<<<<< HEAD
                                                                    className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
=======
                                                                    className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
<<<<<<< HEAD
                                                                      className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
=======
                                                                      className="e7bsqvz3 css-1jjmnki-StyledSvg-StyledInlineSvg ebb48o80"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </ForwardRef>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </Tooltip>
                                </div>
                              </Base>
                            </Flex>
                          </div>
                        </Base>
                      </PanelItem>
                      <PanelItem
                        align="center"
                        className="ref-tag-row"
                        key="device"
                        p={0}
                      >
                        <Base
                          align="center"
                          className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                          p={0}
                        >
                          <div
                            className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                            is={null}
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <Base
                                align="flex-end"
                                className="css-14o7hgh"
                                flex="1"
                                p={2}
                              >
                                <div
                                  className="css-14o7hgh"
                                  is={null}
                                >
                                  <span>
                                    device
                                  </span>
                                </div>
                              </Base>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <Base
                                align="center"
                                className="css-p3ab1k"
                                p={2}
                              >
                                <div
                                  className="css-p3ab1k"
                                  is={null}
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    disabled={true}
                                    position="top"
                                    title="This tag cannot be deleted."
                                  >
                                    <LinkWithConfirmation
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={false}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                        stopPropagation={false}
                                      >
                                        <a
                                          className=""
                                          disabled={false}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            align="center"
                                            data-test-id="delete"
                                            disabled={false}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-disabled={false}
                                              data-test-id="delete"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <ForwardRef
                                                aria-disabled={false}
<<<<<<< HEAD
                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                                                className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                data-test-id="delete"
                                                disabled={false}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  aria-disabled={false}
<<<<<<< HEAD
                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                                                  className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                  data-test-id="delete"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="xsmall"
                                                  >
                                                    <Component
<<<<<<< HEAD
                                                      align="center"
                                                      className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-1bqncjo-ButtonLabel e12ma6z1"
=======
                                                      className="css-uthd1f-ButtonLabel e7bsqvz1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
<<<<<<< HEAD
                                                            className="css-ljhpxy-Icon e12ma6z2"
=======
                                                            className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
<<<<<<< HEAD
                                                              className="css-ljhpxy-Icon e12ma6z2"
=======
                                                              className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
<<<<<<< HEAD
                                                                  className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
=======
                                                                  className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
<<<<<<< HEAD
                                                                    className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
=======
                                                                    className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
<<<<<<< HEAD
                                                                      className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
=======
                                                                      className="e7bsqvz3 css-1jjmnki-StyledSvg-StyledInlineSvg ebb48o80"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </ForwardRef>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </Tooltip>
                                </div>
                              </Base>
                            </Flex>
                          </div>
                        </Base>
                      </PanelItem>
                      <PanelItem
                        align="center"
                        className="ref-tag-row"
                        key="url"
                        p={0}
                      >
                        <Base
                          align="center"
                          className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                          p={0}
                        >
                          <div
                            className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                            is={null}
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <Base
                                align="flex-end"
                                className="css-14o7hgh"
                                flex="1"
                                p={2}
                              >
                                <div
                                  className="css-14o7hgh"
                                  is={null}
                                >
                                  <span>
                                    url
                                  </span>
                                </div>
                              </Base>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <Base
                                align="center"
                                className="css-p3ab1k"
                                p={2}
                              >
                                <div
                                  className="css-p3ab1k"
                                  is={null}
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    disabled={true}
                                    position="top"
                                    title="This tag cannot be deleted."
                                  >
                                    <LinkWithConfirmation
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      title="Remove tag?"
                                    >
                                      <Confirm
                                        cancelText="Cancel"
                                        confirmText="Confirm"
                                        disableConfirmButton={false}
                                        disabled={false}
                                        message="Are you sure you want to remove this tag?"
                                        onConfirm={[Function]}
                                        priority="primary"
                                        stopPropagation={false}
                                      >
                                        <a
                                          className=""
                                          disabled={false}
                                          onClick={[Function]}
                                          title="Remove tag?"
                                        >
                                          <Button
                                            align="center"
                                            data-test-id="delete"
                                            disabled={false}
                                            icon="icon-trash"
                                            size="xsmall"
                                          >
                                            <StyledButton
                                              aria-disabled={false}
                                              data-test-id="delete"
                                              disabled={false}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <ForwardRef
                                                aria-disabled={false}
<<<<<<< HEAD
                                                className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                                                className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                data-test-id="delete"
                                                disabled={false}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <button
                                                  aria-disabled={false}
<<<<<<< HEAD
                                                  className="css-1uhlusb-StyledButton-getColors e12ma6z0"
=======
                                                  className="css-dkprmi-StyledButton-getColors e7bsqvz0"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                  data-test-id="delete"
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                >
                                                  <ButtonLabel
                                                    align="center"
                                                    size="xsmall"
                                                  >
                                                    <Component
<<<<<<< HEAD
                                                      align="center"
                                                      className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-1bqncjo-ButtonLabel e12ma6z1"
=======
                                                      className="css-uthd1f-ButtonLabel e7bsqvz1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                      >
                                                        <Icon
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <Component
<<<<<<< HEAD
                                                            className="css-ljhpxy-Icon e12ma6z2"
=======
                                                            className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                            hasChildren={false}
                                                            size="xsmall"
                                                          >
                                                            <span
<<<<<<< HEAD
                                                              className="css-ljhpxy-Icon e12ma6z2"
=======
                                                              className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                              size="xsmall"
                                                            >
                                                              <StyledInlineSvg
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <InlineSvg
<<<<<<< HEAD
                                                                  className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
=======
                                                                  className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
<<<<<<< HEAD
                                                                    className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
=======
                                                                    className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
<<<<<<< HEAD
                                                                      className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
=======
                                                                      className="e7bsqvz3 css-1jjmnki-StyledSvg-StyledInlineSvg ebb48o80"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
                                                                    >
                                                                      <use
                                                                        href="#test"
                                                                        xlinkHref="#test"
                                                                      />
                                                                    </svg>
                                                                  </StyledSvg>
                                                                </InlineSvg>
                                                              </StyledInlineSvg>
                                                            </span>
                                                          </Component>
                                                        </Icon>
                                                      </span>
                                                    </Component>
                                                  </ButtonLabel>
                                                </button>
                                              </ForwardRef>
                                            </StyledButton>
                                          </Button>
                                        </a>
                                        <Modal
                                          animation={false}
                                          autoFocus={true}
                                          backdrop={true}
                                          bsClass="modal"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop={true}
                                            backdropClassName="modal-backdrop"
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          />
                                        </Modal>
                                      </Confirm>
                                    </LinkWithConfirmation>
                                  </Tooltip>
                                </div>
                              </Base>
                            </Flex>
                          </div>
                        </Base>
                      </PanelItem>
                      <PanelItem
                        align="center"
                        className="ref-tag-row"
                        key="environment"
                        p={0}
                      >
                        <Base
                          align="center"
                          className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                          p={0}
                        >
                          <div
                            className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                            is={null}
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <Base
                                align="flex-end"
                                className="css-14o7hgh"
                                flex="1"
                                p={2}
                              >
                                <div
                                  className="css-14o7hgh"
                                  is={null}
                                >
                                  <span>
                                    environment
                                  </span>
                                </div>
                              </Base>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <Base
                                align="center"
                                className="css-p3ab1k"
                                p={2}
                              >
                                <div
                                  className="css-p3ab1k"
                                  is={null}
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    disabled={false}
                                    position="top"
                                    title="This tag cannot be deleted."
                                  >
                                    <Manager>
                                      <Reference>
                                        <InnerReference
                                          setReferenceNode={[Function]}
                                        >
                                          <Container
                                            aria-describedby="tooltip-123456"
                                            containerDisplayMode="inline-block"
                                            innerRef={[Function]}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                          >
                                            <span
                                              aria-describedby="tooltip-123456"
                                              className="css-1m3e0hg-Container erna86q0"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                            >
<<<<<<< HEAD
                                              <LinkWithConfirmation
                                                disabled={true}
                                                message="Are you sure you want to remove this tag?"
                                                onConfirm={[Function]}
                                                title="Remove tag?"
                                              >
                                                <Confirm
                                                  cancelText="Cancel"
                                                  confirmText="Confirm"
                                                  disableConfirmButton={false}
                                                  disabled={true}
                                                  message="Are you sure you want to remove this tag?"
                                                  onConfirm={[Function]}
                                                  priority="primary"
                                                  stopPropagation={false}
=======
                                              <Component
                                                aria-disabled={true}
                                                className="css-1ujzp8g-StyledButton-getColors e7bsqvz0"
                                                data-test-id="delete"
                                                href={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                                to={null}
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  className="css-1ujzp8g-StyledButton-getColors e7bsqvz0"
                                                  data-test-id="delete"
                                                  href={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                  to={null}
>>>>>>> build(travis): yarn --pnp [WIP]
                                                >
                                                  <a
                                                    className="disabled"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    title="Remove tag?"
                                                  >
<<<<<<< HEAD
                                                    <Button
                                                      align="center"
                                                      data-test-id="delete"
                                                      disabled={true}
                                                      icon="icon-trash"
                                                      size="xsmall"
                                                    >
                                                      <StyledButton
                                                        aria-disabled={true}
                                                        data-test-id="delete"
                                                        disabled={true}
                                                        href={null}
                                                        onClick={[Function]}
                                                        role="button"
                                                        size="xsmall"
                                                        to={null}
=======
                                                    <Component
                                                      className="css-uthd1f-ButtonLabel e7bsqvz1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                      >
                                                        <ForwardRef
                                                          aria-disabled={true}
                                                          className="css-15g9rdf-StyledButton-getColors e12ma6z0"
                                                          data-test-id="delete"
                                                          disabled={true}
                                                          href={null}
                                                          onClick={[Function]}
                                                          role="button"
                                                          size="xsmall"
                                                          to={null}
                                                        >
<<<<<<< HEAD
                                                          <button
                                                            aria-disabled={true}
                                                            className="css-15g9rdf-StyledButton-getColors e12ma6z0"
                                                            data-test-id="delete"
                                                            href={null}
                                                            onClick={[Function]}
                                                            role="button"
=======
                                                          <Component
                                                            className="css-ljhpxy-Icon e7bsqvz2"
                                                            hasChildren={false}
>>>>>>> build(travis): yarn --pnp [WIP]
                                                            size="xsmall"
                                                            to={null}
                                                          >
<<<<<<< HEAD
                                                            <ButtonLabel
                                                              align="center"
=======
                                                            <span
                                                              className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                              size="xsmall"
                                                            >
                                                              <Component
                                                                align="center"
                                                                className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                                size="xsmall"
                                                              >
<<<<<<< HEAD
                                                                <span
                                                                  className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                                >
                                                                  <Icon
                                                                    hasChildren={false}
                                                                    size="xsmall"
                                                                  >
                                                                    <Component
                                                                      className="css-ljhpxy-Icon e12ma6z2"
                                                                      hasChildren={false}
                                                                      size="xsmall"
=======
                                                                <InlineSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
                                                                    className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
                                                                      className="e7bsqvz3 css-1jjmnki-StyledSvg-StyledInlineSvg ebb48o80"
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                    >
                                                                      <span
                                                                        className="css-ljhpxy-Icon e12ma6z2"
                                                                        size="xsmall"
                                                                      >
                                                                        <StyledInlineSvg
                                                                          size="12px"
                                                                          src="icon-trash"
                                                                        >
                                                                          <InlineSvg
                                                                            className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
                                                                            size="12px"
                                                                            src="icon-trash"
                                                                          >
                                                                            <StyledSvg
                                                                              className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
                                                                              height="12px"
                                                                              viewBox={Object {}}
                                                                              width="12px"
                                                                            >
                                                                              <svg
                                                                                className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                                height="12px"
                                                                                viewBox={Object {}}
                                                                                width="12px"
                                                                              >
                                                                                <use
                                                                                  href="#test"
                                                                                  xlinkHref="#test"
                                                                                />
                                                                              </svg>
                                                                            </StyledSvg>
                                                                          </InlineSvg>
                                                                        </StyledInlineSvg>
                                                                      </span>
                                                                    </Component>
                                                                  </Icon>
                                                                </span>
                                                              </Component>
                                                            </ButtonLabel>
                                                          </button>
                                                        </ForwardRef>
                                                      </StyledButton>
                                                    </Button>
                                                  </a>
                                                  <Modal
                                                    animation={false}
                                                    autoFocus={true}
                                                    backdrop={true}
                                                    bsClass="modal"
                                                    dialogComponentClass={[Function]}
                                                    enforceFocus={true}
                                                    keyboard={true}
                                                    manager={
                                                      ModalManager {
                                                        "add": [Function],
                                                        "containers": Array [],
                                                        "data": Array [],
                                                        "handleContainerOverflow": true,
                                                        "hideSiblingNodes": true,
                                                        "isTopModal": [Function],
                                                        "modals": Array [],
                                                        "remove": [Function],
                                                      }
                                                    }
                                                    onHide={[Function]}
                                                    renderBackdrop={[Function]}
                                                    restoreFocus={true}
                                                    show={false}
                                                  >
                                                    <Modal
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      backdropClassName="modal-backdrop"
                                                      containerClassName="modal-open"
                                                      enforceFocus={true}
                                                      keyboard={true}
                                                      manager={
                                                        ModalManager {
                                                          "add": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "isTopModal": [Function],
                                                          "modals": Array [],
                                                          "remove": [Function],
                                                        }
                                                      }
                                                      onEntering={[Function]}
                                                      onExited={[Function]}
                                                      onHide={[Function]}
                                                      renderBackdrop={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                    />
                                                  </Modal>
                                                </Confirm>
                                              </LinkWithConfirmation>
                                            </span>
                                          </Container>
                                        </InnerReference>
                                      </Reference>
                                    </Manager>
                                  </Tooltip>
                                </div>
                              </Base>
                            </Flex>
                          </div>
                        </Base>
                      </PanelItem>
                      <PanelItem
                        align="center"
                        className="ref-tag-row"
                        key="user"
                        p={0}
                      >
                        <Base
                          align="center"
                          className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                          p={0}
                        >
                          <div
                            className="ref-tag-row css-1jykl04-PanelItem egwqg5y0"
                            is={null}
                          >
                            <Box
                              align="flex-end"
                              flex="1"
                              p={2}
                            >
                              <Base
                                align="flex-end"
                                className="css-14o7hgh"
                                flex="1"
                                p={2}
                              >
                                <div
                                  className="css-14o7hgh"
                                  is={null}
                                >
                                  <span>
                                    user
                                  </span>
                                </div>
                              </Base>
                            </Box>
                            <Flex
                              align="center"
                              p={2}
                            >
                              <Base
                                align="center"
                                className="css-p3ab1k"
                                p={2}
                              >
                                <div
                                  className="css-p3ab1k"
                                  is={null}
                                >
                                  <Tooltip
                                    containerDisplayMode="inline-block"
                                    position="top"
                                    title="This tag cannot be deleted."
                                  >
                                    <Manager>
                                      <Reference>
                                        <InnerReference
                                          setReferenceNode={[Function]}
                                        >
                                          <Container
                                            aria-describedby="tooltip-123456"
                                            containerDisplayMode="inline-block"
                                            innerRef={[Function]}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                          >
                                            <span
                                              aria-describedby="tooltip-123456"
                                              className="css-1m3e0hg-Container erna86q0"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                            >
<<<<<<< HEAD
                                              <LinkWithConfirmation
                                                disabled={true}
                                                message="Are you sure you want to remove this tag?"
                                                onConfirm={[Function]}
                                                title="Remove tag?"
                                              >
                                                <Confirm
                                                  cancelText="Cancel"
                                                  confirmText="Confirm"
                                                  disableConfirmButton={false}
                                                  disabled={true}
                                                  message="Are you sure you want to remove this tag?"
                                                  onConfirm={[Function]}
                                                  priority="primary"
                                                  stopPropagation={false}
=======
                                              <Component
                                                aria-disabled={true}
                                                className="css-1ujzp8g-StyledButton-getColors e7bsqvz0"
                                                data-test-id="delete"
                                                href={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                                to={null}
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  className="css-1ujzp8g-StyledButton-getColors e7bsqvz0"
                                                  data-test-id="delete"
                                                  href={null}
                                                  onClick={[Function]}
                                                  role="button"
                                                  size="xsmall"
                                                  to={null}
>>>>>>> build(travis): yarn --pnp [WIP]
                                                >
                                                  <a
                                                    className="disabled"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    title="Remove tag?"
                                                  >
<<<<<<< HEAD
                                                    <Button
                                                      align="center"
                                                      data-test-id="delete"
                                                      disabled={true}
                                                      icon="icon-trash"
                                                      size="xsmall"
                                                    >
                                                      <StyledButton
                                                        aria-disabled={true}
                                                        data-test-id="delete"
                                                        disabled={true}
                                                        href={null}
                                                        onClick={[Function]}
                                                        role="button"
                                                        size="xsmall"
                                                        to={null}
=======
                                                    <Component
                                                      className="css-uthd1f-ButtonLabel e7bsqvz1"
                                                      size="xsmall"
                                                    >
                                                      <span
                                                        className="css-uthd1f-ButtonLabel e7bsqvz1"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                      >
                                                        <ForwardRef
                                                          aria-disabled={true}
                                                          className="css-15g9rdf-StyledButton-getColors e12ma6z0"
                                                          data-test-id="delete"
                                                          disabled={true}
                                                          href={null}
                                                          onClick={[Function]}
                                                          role="button"
                                                          size="xsmall"
                                                          to={null}
                                                        >
<<<<<<< HEAD
                                                          <button
                                                            aria-disabled={true}
                                                            className="css-15g9rdf-StyledButton-getColors e12ma6z0"
                                                            data-test-id="delete"
                                                            href={null}
                                                            onClick={[Function]}
                                                            role="button"
=======
                                                          <Component
                                                            className="css-ljhpxy-Icon e7bsqvz2"
                                                            hasChildren={false}
>>>>>>> build(travis): yarn --pnp [WIP]
                                                            size="xsmall"
                                                            to={null}
                                                          >
<<<<<<< HEAD
                                                            <ButtonLabel
                                                              align="center"
=======
                                                            <span
                                                              className="css-ljhpxy-Icon e7bsqvz2"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                              size="xsmall"
                                                            >
                                                              <Component
                                                                align="center"
                                                                className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                                size="xsmall"
                                                              >
<<<<<<< HEAD
                                                                <span
                                                                  className="css-1bqncjo-ButtonLabel e12ma6z1"
                                                                >
                                                                  <Icon
                                                                    hasChildren={false}
                                                                    size="xsmall"
                                                                  >
                                                                    <Component
                                                                      className="css-ljhpxy-Icon e12ma6z2"
                                                                      hasChildren={false}
                                                                      size="xsmall"
=======
                                                                <InlineSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
                                                                  size="12px"
                                                                  src="icon-trash"
                                                                >
                                                                  <StyledSvg
                                                                    className="css-1ov3rcq-StyledInlineSvg e7bsqvz3"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <svg
                                                                      className="e7bsqvz3 css-1jjmnki-StyledSvg-StyledInlineSvg ebb48o80"
                                                                      height="12px"
                                                                      viewBox={Object {}}
                                                                      width="12px"
>>>>>>> build(travis): yarn --pnp [WIP]
                                                                    >
                                                                      <span
                                                                        className="css-ljhpxy-Icon e12ma6z2"
                                                                        size="xsmall"
                                                                      >
                                                                        <StyledInlineSvg
                                                                          size="12px"
                                                                          src="icon-trash"
                                                                        >
                                                                          <InlineSvg
                                                                            className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
                                                                            size="12px"
                                                                            src="icon-trash"
                                                                          >
                                                                            <StyledSvg
                                                                              className="css-1ov3rcq-StyledInlineSvg e12ma6z3"
                                                                              height="12px"
                                                                              viewBox={Object {}}
                                                                              width="12px"
                                                                            >
                                                                              <svg
                                                                                className="e12ma6z3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                                height="12px"
                                                                                viewBox={Object {}}
                                                                                width="12px"
                                                                              >
                                                                                <use
                                                                                  href="#test"
                                                                                  xlinkHref="#test"
                                                                                />
                                                                              </svg>
                                                                            </StyledSvg>
                                                                          </InlineSvg>
                                                                        </StyledInlineSvg>
                                                                      </span>
                                                                    </Component>
                                                                  </Icon>
                                                                </span>
                                                              </Component>
                                                            </ButtonLabel>
                                                          </button>
                                                        </ForwardRef>
                                                      </StyledButton>
                                                    </Button>
                                                  </a>
                                                  <Modal
                                                    animation={false}
                                                    autoFocus={true}
                                                    backdrop={true}
                                                    bsClass="modal"
                                                    dialogComponentClass={[Function]}
                                                    enforceFocus={true}
                                                    keyboard={true}
                                                    manager={
                                                      ModalManager {
                                                        "add": [Function],
                                                        "containers": Array [],
                                                        "data": Array [],
                                                        "handleContainerOverflow": true,
                                                        "hideSiblingNodes": true,
                                                        "isTopModal": [Function],
                                                        "modals": Array [],
                                                        "remove": [Function],
                                                      }
                                                    }
                                                    onHide={[Function]}
                                                    renderBackdrop={[Function]}
                                                    restoreFocus={true}
                                                    show={false}
                                                  >
                                                    <Modal
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      backdropClassName="modal-backdrop"
                                                      containerClassName="modal-open"
                                                      enforceFocus={true}
                                                      keyboard={true}
                                                      manager={
                                                        ModalManager {
                                                          "add": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "isTopModal": [Function],
                                                          "modals": Array [],
                                                          "remove": [Function],
                                                        }
                                                      }
                                                      onEntering={[Function]}
                                                      onExited={[Function]}
                                                      onHide={[Function]}
                                                      renderBackdrop={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                    />
                                                  </Modal>
                                                </Confirm>
                                              </LinkWithConfirmation>
                                            </span>
                                          </Container>
                                        </InnerReference>
                                      </Reference>
                                    </Manager>
                                  </Tooltip>
                                </div>
                              </Base>
                            </Flex>
                          </div>
                        </Base>
                      </PanelItem>
                    </Access>
                  </AccessContainer>
                </withConfig(AccessContainer)>
              </div>
            </PanelBody>
          </div>
        </Component>
      </Panel>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
